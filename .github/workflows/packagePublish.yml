name: Package Publish CI

on:
  push:
    branches:
      - master

env:
  READ_ARTIFACTS_TOKEN: ${{ secrets.READ_ARTIFACTS_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous job
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          ignore_sha: true

      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: true
          fetch-depth: 0

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'

      - name: Setup env
        run: |
          source version.properties
          version=$(echo $VERSION_NAME)
          echo "VERSION_NAME=$version" >> $GITHUB_ENV

          aar_file="sushilib/build/outputs/aar/sushilib-release.aar"
          file_name="sushi-v$version"

          echo "AAR_PATH=$aar_file" >> $GITHUB_ENV
          echo "FILE_NAME=$file_name" >> $GITHUB_ENV

      - name: Build with Gradle
        run: |
          ./gradlew sushilib:assembleRelease

      - name: Publish the new package
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew sushilib:publish

      - name: Release library
        if: success()
        uses: Zomato/treeware@master
        with:
          prod_branch: master
          should_release: true
          drafter_path: .github/release-template.yml
          assets: ${{ env.AAR_PATH }}#${{ env.FILE_NAME }}
          version_name: ${{ env.VERSION_NAME }}

      - name: Master branch syncup PR
        id: master_branch_syncup
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACTIONS_TOKEN }}
          VERSION_NAME: ${{ env.VERSION_NAME }}
        run: |
          git config user.name ${GITHUB_ACTOR}
          git config user.email ${GITHUB_ACTOR}@zomato.com

          # creating PR on dev
          pr_allow_empty="true"
          pr_title="Branch syncup | $VERSION_NAME"
          pr_body=$(bash $GITHUB_WORKSPACE/scripts/get-changelog.sh "origin/dev" "origin/master")
          echo "pr body: $pr_body"
          args=( "$GITHUB_TOKEN" "master" "dev" "$pr_allow_empty" "$pr_title" "$pr_body" )
          bash $GITHUB_WORKSPACE/scripts/createpr.sh "${args[@]}"